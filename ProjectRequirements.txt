Use Node.js and Express.js to create a RESTful API. uses node and express  ---------- 

Use Handlebars.js as the templating engine. 

Use MySQL and the Sequelize ORM for the database. sql is conected with schema -----------

Have both GET and POST routes for retrieving and adding new data. routes made --------- just tweek 

Be deployed using Heroku (with data).

Use at least one new library, package, or technology that we havenâ€™t discussed.

Have a polished UI.

Be responsive.

Be interactive (i.e., accept and respond to user input).

Have a folder structure that meets the MVC paradigm. has good folder structure

Include authentication (express-session and cookies). has sess in server.js line 19 ----------

Protect API keys and sensitive information with environment variables.

Have a clean repository that meets quality coding standards (file structure, naming conventions, follows best practices for class/id naming conventions, indentation, quality comments, etc.). has good repo-----------

Have a quality README (with unique name, description, technologies used, screenshot, and link to deployed application). has a good README  ------------

Finally, you must add your project to the portfolio that you created in Module 2. 


6 / 15